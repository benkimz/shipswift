// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using ShipSwift.Infrastructure;

#nullable disable

namespace ShipSwift.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("ShipSwift.CoreBusiness.Models.Carrier", b =>
                {
                    b.Property<int>("CarrierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("carrier_id");

                    b.Property<string>("CarrierMode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("carrier_mode");

                    b.Property<string>("CarrierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("carrier_name");

                    b.HasKey("CarrierId");

                    b.ToTable("CARRIER", (string)null);
                });

            modelBuilder.Entity("ShipSwift.CoreBusiness.Models.Shipment", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("shipment_id");

                    b.Property<string>("ShipmentDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("shipment_description");

                    b.Property<decimal>("ShipmentWeight")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("shipment_weight");

                    b.Property<int>("carrier_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("shipment_rate_id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("shipper_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShipmentId");

                    b.HasIndex("carrier_id");

                    b.HasIndex("shipment_rate_id");

                    b.HasIndex("shipper_id");

                    b.ToTable("SHIPMENT", (string)null);
                });

            modelBuilder.Entity("ShipSwift.CoreBusiness.Models.ShipmentRate", b =>
                {
                    b.Property<int>("ShipmentRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("shipment_rate_id");

                    b.Property<string>("ShipmentRateClass")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("shipment_rate_class");

                    b.Property<string>("ShipmentRateDescription")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("shipment_rate_description");

                    b.HasKey("ShipmentRateId");

                    b.ToTable("SHIPMENT_RATE", (string)null);
                });

            modelBuilder.Entity("ShipSwift.CoreBusiness.Models.Shipper", b =>
                {
                    b.Property<int>("ShipperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("shipper_id");

                    b.Property<string>("ShipperName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("shipper_name");

                    b.HasKey("ShipperId");

                    b.ToTable("SHIPPER", (string)null);
                });

            modelBuilder.Entity("ShipSwift.CoreBusiness.Models.Shipment", b =>
                {
                    b.HasOne("ShipSwift.CoreBusiness.Models.Carrier", "Carrier")
                        .WithMany()
                        .HasForeignKey("carrier_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipSwift.CoreBusiness.Models.ShipmentRate", "ShipmentRate")
                        .WithMany()
                        .HasForeignKey("shipment_rate_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipSwift.CoreBusiness.Models.Shipper", null)
                        .WithMany("Shipments")
                        .HasForeignKey("shipper_id");

                    b.Navigation("Carrier");

                    b.Navigation("ShipmentRate");
                });

            modelBuilder.Entity("ShipSwift.CoreBusiness.Models.Shipper", b =>
                {
                    b.Navigation("Shipments");
                });
#pragma warning restore 612, 618
        }
    }
}
